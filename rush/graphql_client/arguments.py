# Generated by ariadne-codegen
# Source: combined.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import ArgumentFull, PageInfoFull


class Arguments(BaseModel):
    me: "ArgumentsMe"


class ArgumentsMe(BaseModel):
    account: Optional["ArgumentsMeAccount"]


class ArgumentsMeAccount(BaseModel):
    arguments: "ArgumentsMeAccountArguments"


class ArgumentsMeAccountArguments(BaseModel):
    page_info: "ArgumentsMeAccountArgumentsPageInfo" = Field(alias="pageInfo")
    edges: List["ArgumentsMeAccountArgumentsEdges"]


class ArgumentsMeAccountArgumentsPageInfo(PageInfoFull):
    pass


class ArgumentsMeAccountArgumentsEdges(BaseModel):
    cursor: str
    node: "ArgumentsMeAccountArgumentsEdgesNode"


class ArgumentsMeAccountArgumentsEdgesNode(ArgumentFull):
    pass
