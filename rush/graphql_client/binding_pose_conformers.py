# Generated by ariadne-codegen
# Source: gql

from typing import List

from pydantic import Field

from .base_model import BaseModel
from .fragments import BindingPoseConformerFields, PageInfoFull


class BindingPoseConformers(BaseModel):
    me: "BindingPoseConformersMe"


class BindingPoseConformersMe(BaseModel):
    account: "BindingPoseConformersMeAccount"


class BindingPoseConformersMeAccount(BaseModel):
    project: "BindingPoseConformersMeAccountProject"


class BindingPoseConformersMeAccountProject(BaseModel):
    binding_pose_conformers: "BindingPoseConformersMeAccountProjectBindingPoseConformers"


class BindingPoseConformersMeAccountProjectBindingPoseConformers(BaseModel):
    page_info: "BindingPoseConformersMeAccountProjectBindingPoseConformersPageInfo" = (
        Field(alias="pageInfo")
    )
    edges: List["BindingPoseConformersMeAccountProjectBindingPoseConformersEdges"]
    total_count: int


class BindingPoseConformersMeAccountProjectBindingPoseConformersPageInfo(PageInfoFull):
    pass


class BindingPoseConformersMeAccountProjectBindingPoseConformersEdges(BaseModel):
    cursor: str
    node: "BindingPoseConformersMeAccountProjectBindingPoseConformersEdgesNode"


class BindingPoseConformersMeAccountProjectBindingPoseConformersEdgesNode(
    BindingPoseConformerFields
):
    pass


BindingPoseConformers.model_rebuild()
BindingPoseConformersMe.model_rebuild()
BindingPoseConformersMeAccount.model_rebuild()
BindingPoseConformersMeAccountProject.model_rebuild()
BindingPoseConformersMeAccountProjectBindingPoseConformers.model_rebuild()
BindingPoseConformersMeAccountProjectBindingPoseConformersEdges.model_rebuild()
