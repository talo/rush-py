# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import List

from pydantic import Field

from .base_model import BaseModel
from .fragments import ModuleInstanceFull, PageInfoFull


class ModuleInstanceDetails(BaseModel):
    module_instance: "ModuleInstanceDetailsModuleInstance"


class ModuleInstanceDetailsModuleInstance(ModuleInstanceFull):
    stdout: "ModuleInstanceDetailsModuleInstanceStdout"
    stderr: "ModuleInstanceDetailsModuleInstanceStderr"


class ModuleInstanceDetailsModuleInstanceStdout(BaseModel):
    page_info: "ModuleInstanceDetailsModuleInstanceStdoutPageInfo" = Field(alias="pageInfo")
    edges: List["ModuleInstanceDetailsModuleInstanceStdoutEdges"]


class ModuleInstanceDetailsModuleInstanceStdoutPageInfo(PageInfoFull):
    pass


class ModuleInstanceDetailsModuleInstanceStdoutEdges(BaseModel):
    cursor: str
    node: "ModuleInstanceDetailsModuleInstanceStdoutEdgesNode"


class ModuleInstanceDetailsModuleInstanceStdoutEdgesNode(BaseModel):
    id: str
    created_at: datetime
    content: List[str]


class ModuleInstanceDetailsModuleInstanceStderr(BaseModel):
    page_info: "ModuleInstanceDetailsModuleInstanceStderrPageInfo" = Field(alias="pageInfo")
    edges: List["ModuleInstanceDetailsModuleInstanceStderrEdges"]


class ModuleInstanceDetailsModuleInstanceStderrPageInfo(PageInfoFull):
    pass


class ModuleInstanceDetailsModuleInstanceStderrEdges(BaseModel):
    cursor: str
    node: "ModuleInstanceDetailsModuleInstanceStderrEdgesNode"


class ModuleInstanceDetailsModuleInstanceStderrEdgesNode(BaseModel):
    id: str
    created_at: datetime
    content: List[str]
