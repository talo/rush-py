# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel


class SmolConformer(BaseModel):
    me: "SmolConformerMe"


class SmolConformerMe(BaseModel):
    account: "SmolConformerMeAccount"


class SmolConformerMeAccount(BaseModel):
    project: "SmolConformerMeAccountProject"


class SmolConformerMeAccountProject(BaseModel):
    smol_conformer: "SmolConformerMeAccountProjectSmolConformer"


class SmolConformerMeAccountProjectSmolConformer(BaseModel):
    id: Any
    residues: List[int]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]
    structure: "SmolConformerMeAccountProjectSmolConformerStructure"
    smol: "SmolConformerMeAccountProjectSmolConformerSmol"


class SmolConformerMeAccountProjectSmolConformerStructure(BaseModel):
    id: Any
    rcsb_id: Optional[str]


class SmolConformerMeAccountProjectSmolConformerSmol(BaseModel):
    id: Any
    smi: Optional[str]


SmolConformer.model_rebuild()
SmolConformerMe.model_rebuild()
SmolConformerMeAccount.model_rebuild()
SmolConformerMeAccountProject.model_rebuild()
SmolConformerMeAccountProjectSmolConformer.model_rebuild()
