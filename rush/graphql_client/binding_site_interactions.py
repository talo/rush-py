# Generated by ariadne-codegen
# Source: gql

from typing import List

from pydantic import Field

from .base_model import BaseModel
from .fragments import BindingSiteInteractionFields, PageInfoFull


class BindingSiteInteractions(BaseModel):
    me: "BindingSiteInteractionsMe"


class BindingSiteInteractionsMe(BaseModel):
    account: "BindingSiteInteractionsMeAccount"


class BindingSiteInteractionsMeAccount(BaseModel):
    project: "BindingSiteInteractionsMeAccountProject"


class BindingSiteInteractionsMeAccountProject(BaseModel):
    binding_site_interactions: "BindingSiteInteractionsMeAccountProjectBindingSiteInteractions"


class BindingSiteInteractionsMeAccountProjectBindingSiteInteractions(BaseModel):
    page_info: "BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsPageInfo" = Field(
        alias="pageInfo"
    )
    edges: List["BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsEdges"]
    total_count: int


class BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsPageInfo(
    PageInfoFull
):
    pass


class BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsEdges(BaseModel):
    cursor: str
    node: "BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsEdgesNode"


class BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsEdgesNode(
    BindingSiteInteractionFields
):
    pass


BindingSiteInteractions.model_rebuild()
BindingSiteInteractionsMe.model_rebuild()
BindingSiteInteractionsMeAccount.model_rebuild()
BindingSiteInteractionsMeAccountProject.model_rebuild()
BindingSiteInteractionsMeAccountProjectBindingSiteInteractions.model_rebuild()
BindingSiteInteractionsMeAccountProjectBindingSiteInteractionsEdges.model_rebuild()
