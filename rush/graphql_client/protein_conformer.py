# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel


class ProteinConformer(BaseModel):
    me: "ProteinConformerMe"


class ProteinConformerMe(BaseModel):
    account: "ProteinConformerMeAccount"


class ProteinConformerMeAccount(BaseModel):
    project: "ProteinConformerMeAccountProject"


class ProteinConformerMeAccountProject(BaseModel):
    protein_conformer: "ProteinConformerMeAccountProjectProteinConformer"


class ProteinConformerMeAccountProjectProteinConformer(BaseModel):
    id: Any
    residues: List[int]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]
    structure: "ProteinConformerMeAccountProjectProteinConformerStructure"
    protein: "ProteinConformerMeAccountProjectProteinConformerProtein"


class ProteinConformerMeAccountProjectProteinConformerStructure(BaseModel):
    id: Any
    rcsb_id: Optional[str]


class ProteinConformerMeAccountProjectProteinConformerProtein(BaseModel):
    id: Any
    sequence: str


ProteinConformer.model_rebuild()
ProteinConformerMe.model_rebuild()
ProteinConformerMeAccount.model_rebuild()
ProteinConformerMeAccountProject.model_rebuild()
ProteinConformerMeAccountProjectProteinConformer.model_rebuild()
