# Generated by ariadne-codegen
# Source: schema.graphql

from datetime import datetime
from typing import Any, List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    DateTimeSort,
    MemUnits,
    ModuleInstanceStatus,
    ModuleInstanceTarget,
    ObjectFormat,
    RunStatus,
    StringSort,
    TaggedType,
    U64Sort,
    UuidSort,
)


class AccountBucketConfigInput(BaseModel):
    data_bucket: str
    log_bucket: str
    bucket_region: str


class AccountConfigInput(BaseModel):
    config_account: Optional[UUID] = None
    bucket_config: Optional["AccountBucketConfigInput"] = None


class ArgumentInput(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    tags: Optional[List[str]] = None
    value: Optional[Any] = None


class CreateProjectInput(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateProteinConformerInput(BaseModel):
    project_id: Any
    protein_id: Any
    structure_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateProteinInput(BaseModel):
    sequence: str
    project_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateRun(BaseModel):
    rex: Optional[str] = None
    expr: Optional[Any] = None
    project_id: Any
    module_lock: Optional[Any] = None
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateSmolConformerInput(BaseModel):
    project_id: Any
    smol_id: Any
    structure_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateSmolInput(BaseModel):
    smi: Optional[str] = None
    inchi: Optional[str] = None
    project_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateStructureInput(BaseModel):
    rcsb_id: Optional[str] = None
    topology: Any
    residues: Any
    chains: Any
    project_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class CreateTagInput(BaseModel):
    key: str
    value: Optional[str] = None
    tagged_id: Any
    tagged_type: TaggedType
    project_id: Any
    name: Optional[str] = None
    description: Optional[str] = None
    tags: Optional[List[str]] = None


class DateTimeFilter(BaseModel):
    eq: Optional[datetime] = None
    ne: Optional[datetime] = None
    gt: Optional[datetime] = None
    ge: Optional[datetime] = None
    lt: Optional[datetime] = None
    le: Optional[datetime] = None


class I64Filter(BaseModel):
    eq: Optional[int] = None
    ne: Optional[int] = None
    gt: Optional[int] = None
    ge: Optional[int] = None
    lt: Optional[int] = None
    le: Optional[int] = None


class MetadataFilter(BaseModel):
    all: Optional[List["MetadataFilter"]] = None
    any: Optional[List["MetadataFilter"]] = None
    created_at: Optional["DateTimeFilter"] = None
    updated_at: Optional["DateTimeFilter"] = None
    deleted_at: Optional["DateTimeFilter"] = None
    name: Optional["StringFilter"] = None
    description: Optional["StringFilter"] = None
    tags: Optional["TagFilter"] = None


class MetadataSort(BaseModel):
    created_at: Optional[DateTimeSort] = None
    updated_at: Optional[DateTimeSort] = None
    deleted_at: Optional[DateTimeSort] = None
    name: Optional[StringSort] = None
    description: Optional[StringSort] = None


class ModuleInput(BaseModel):
    path: str
    tags: Optional[List[str]] = None
    tests: List["TestCase"]


class ModuleInstanceInput(BaseModel):
    path: str
    args: List["ArgumentInput"]
    name: Optional[str] = None
    target: Optional[ModuleInstanceTarget] = None
    resources: Optional["ModuleInstanceResourcesInput"] = None
    tags: Optional[List[str]] = None
    out_tags: Optional[List[Optional[List[str]]]] = None
    out_names: Optional[List[Optional[str]]] = None
    end: Optional[bool] = None


class ModuleInstanceResourcesInput(BaseModel):
    gpus: Optional[int] = None
    gpu_mem: Optional[int] = None
    gpu_mem_units: Optional[MemUnits] = None
    cpus: Optional[int] = None
    nodes: Optional[int] = None
    mem: Optional[int] = None
    mem_units: Optional[MemUnits] = None
    storage: Optional[int] = None
    storage_units: Optional[MemUnits] = None
    walltime: Optional[int] = None
    storage_mounts: Optional[List[str]] = None


class ObjectDescriptorFilter(BaseModel):
    all: Optional[List["ObjectDescriptorFilter"]] = None
    any: Optional[List["ObjectDescriptorFilter"]] = None
    id: Optional["UuidFilter"] = None
    object: Optional["VirtualObjectFilter"] = None
    base_url: Optional["StringFilter"] = None
    account_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class ObjectDescriptorSort(BaseModel):
    id: Optional[UuidSort] = None
    object: Optional["VirtualObjectSort"] = None
    base_url: Optional[StringSort] = None
    account_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class ObjectFormatFilter(BaseModel):
    eq: Optional[ObjectFormat] = None
    ne: Optional[ObjectFormat] = None


class ProjectFilter(BaseModel):
    all: Optional[List["ProjectFilter"]] = None
    any: Optional[List["ProjectFilter"]] = None
    id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class ProjectSort(BaseModel):
    id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class ProteinConformerFilter(BaseModel):
    all: Optional[List["ProteinConformerFilter"]] = None
    any: Optional[List["ProteinConformerFilter"]] = None
    id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    project_id: Optional["UuidFilter"] = None
    protein_id: Optional["UuidFilter"] = None
    structure_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class ProteinConformerSort(BaseModel):
    id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    project_id: Optional[UuidSort] = None
    protein_id: Optional[UuidSort] = None
    structure_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class ProteinFilter(BaseModel):
    all: Optional[List["ProteinFilter"]] = None
    any: Optional[List["ProteinFilter"]] = None
    id: Optional["UuidFilter"] = None
    sequence: Optional["StringFilter"] = None
    project_id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class ProteinSort(BaseModel):
    id: Optional[UuidSort] = None
    sequence: Optional[StringSort] = None
    project_id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class ResourceUtilizationInput(BaseModel):
    module_instance_id: UUID = Field(alias="moduleInstanceId")
    gpu: Optional[float] = None
    mem: Optional[float] = None
    storage: float
    walltime: float
    cputime: float
    inodes: float
    sus: Optional[int] = None


class RunFilter(BaseModel):
    all: Optional[List["RunFilter"]] = None
    any: Optional[List["RunFilter"]] = None
    id: Optional["UuidFilter"] = None
    status: Optional["RunStatusFilter"] = None
    project_id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class RunSort(BaseModel):
    id: Optional[UuidSort] = None
    project_id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class RunStatusFilter(BaseModel):
    eq: Optional[RunStatus] = None
    ne: Optional[RunStatus] = None


class SmolConformerFilter(BaseModel):
    all: Optional[List["SmolConformerFilter"]] = None
    any: Optional[List["SmolConformerFilter"]] = None
    id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    project_id: Optional["UuidFilter"] = None
    smol_id: Optional["UuidFilter"] = None
    structure_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class SmolConformerSort(BaseModel):
    id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    project_id: Optional[UuidSort] = None
    smol_id: Optional[UuidSort] = None
    structure_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class SmolFilter(BaseModel):
    all: Optional[List["SmolFilter"]] = None
    any: Optional[List["SmolFilter"]] = None
    id: Optional["UuidFilter"] = None
    smi: Optional["StringFilter"] = None
    inchi: Optional["StringFilter"] = None
    project_id: Optional["UuidFilter"] = None
    account_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class SmolSort(BaseModel):
    id: Optional[UuidSort] = None
    smi: Optional[StringSort] = None
    inchi: Optional[StringSort] = None
    project_id: Optional[UuidSort] = None
    account_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class StringFilter(BaseModel):
    eq: Optional[str] = None
    ne: Optional[str] = None
    gt: Optional[str] = None
    ge: Optional[str] = None
    lt: Optional[str] = None
    le: Optional[str] = None
    like: Optional[str] = None
    in_: Optional[List[str]] = Field(alias="in", default=None)


class StructureFilter(BaseModel):
    all: Optional[List["StructureFilter"]] = None
    any: Optional[List["StructureFilter"]] = None
    id: Optional["UuidFilter"] = None
    rcsb_id: Optional["StringFilter"] = None
    account_id: Optional["UuidFilter"] = None
    project_id: Optional["UuidFilter"] = None
    metadata: Optional["MetadataFilter"] = None


class StructureSort(BaseModel):
    id: Optional[UuidSort] = None
    rcsb_id: Optional[StringSort] = None
    account_id: Optional[UuidSort] = None
    project_id: Optional[UuidSort] = None
    metadata: Optional["MetadataSort"] = None


class TagFilter(BaseModel):
    in_: Optional[List[str]] = Field(alias="in", default=None)


class TestCase(BaseModel):
    args: List["ArgumentInput"]
    target: ModuleInstanceTarget
    resources: Optional["ModuleInstanceResourcesInput"] = None
    tags: Optional[List[str]] = None


class TokenFilter(BaseModel):
    all: Optional[List["TokenFilter"]] = None
    any: Optional[List["TokenFilter"]] = None
    id: Optional["UuidFilter"] = None
    created_at: Optional["DateTimeFilter"] = None
    updated_at: Optional["DateTimeFilter"] = None
    deleted_at: Optional["DateTimeFilter"] = None
    user_id: Optional["UuidFilter"] = None


class TokenSort(BaseModel):
    id: Optional[UuidSort] = None
    created_at: Optional[DateTimeSort] = None
    updated_at: Optional[DateTimeSort] = None
    deleted_at: Optional[DateTimeSort] = None
    user_id: Optional[UuidSort] = None


class TypeQuery(BaseModel):
    path: List[str]
    query: Any


class UpdateModuleInstanceInput(BaseModel):
    id: UUID
    path: Optional[str] = None
    ins: Optional[List["ArgumentInput"]] = None
    outs: Optional[List["ArgumentInput"]] = None
    target: Optional[ModuleInstanceTarget] = None
    status: Optional[ModuleInstanceStatus] = None
    resources: Optional["ModuleInstanceResourcesInput"] = None
    tags: Optional[List[str]] = None


class UuidFilter(BaseModel):
    eq: Optional[Any] = None
    ne: Optional[Any] = None
    in_: Optional[List[Any]] = Field(alias="in", default=None)


class VirtualObjectFilter(BaseModel):
    path: Optional["StringFilter"] = None
    size: Optional["I64Filter"] = None
    format: Optional["ObjectFormatFilter"] = None


class VirtualObjectSort(BaseModel):
    path: Optional[StringSort] = None
    size: Optional[U64Sort] = None
