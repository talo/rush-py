# Generated by ariadne-codegen
# Source: gql

from typing import List

from pydantic import Field

from .base_model import BaseModel
from .fragments import PageInfoFull, ProteinConformerFields


class ProteinConformers(BaseModel):
    me: "ProteinConformersMe"


class ProteinConformersMe(BaseModel):
    account: "ProteinConformersMeAccount"


class ProteinConformersMeAccount(BaseModel):
    project: "ProteinConformersMeAccountProject"


class ProteinConformersMeAccountProject(BaseModel):
    protein_conformers: "ProteinConformersMeAccountProjectProteinConformers"


class ProteinConformersMeAccountProjectProteinConformers(BaseModel):
    page_info: "ProteinConformersMeAccountProjectProteinConformersPageInfo" = Field(
        alias="pageInfo"
    )
    edges: List["ProteinConformersMeAccountProjectProteinConformersEdges"]
    total_count: int


class ProteinConformersMeAccountProjectProteinConformersPageInfo(PageInfoFull):
    pass


class ProteinConformersMeAccountProjectProteinConformersEdges(BaseModel):
    cursor: str
    node: "ProteinConformersMeAccountProjectProteinConformersEdgesNode"


class ProteinConformersMeAccountProjectProteinConformersEdgesNode(
    ProteinConformerFields
):
    pass


ProteinConformers.model_rebuild()
ProteinConformersMe.model_rebuild()
ProteinConformersMeAccount.model_rebuild()
ProteinConformersMeAccountProject.model_rebuild()
ProteinConformersMeAccountProjectProteinConformers.model_rebuild()
ProteinConformersMeAccountProjectProteinConformersEdges.model_rebuild()
