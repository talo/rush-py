[tool]
[tool.black]
line-length = 110

[tool.isort]
line_length = 110
profile = "black"

[tool.pydocstyle]
ignore = ["D202", "D105"]
match = "(?!test_).*.py"

[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__", "**/*venv*", "result", "setup.py"]
ignore = ["**/node_modules", "**/__pycache__", "**/*venv*", "result", "setup.py"]
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportMissingImports = true
reportMissingTypeStubs = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true

[[tool.pyright.executionEnvironments]]
root = ""

[[tool.pyright.executionEnvironments]]
extraPaths = [""]
root = "tests"

[tool.pytest]
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]

[tool.setuptools]
[tool.setuptools.packages]
[tool.setuptools.packages.find]
exclude = ["test", "tests"]
where = [""]

[tool.poetry]
name = "tengu-py"
version = "0.12.1"
description = "Python SDK for interacting with the QDX Tengu API and modules"
authors = ["Ryan Swart <ryan@talosystems.com>"]
readme = "README.md"
packages = [{include = "tengu"}]

[tool.poetry.scripts]
# tengu = "tengu.__main__:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
dataclasses-json = "^0.5.14"
gql = {extras = ["requests"], version = "^3.4.0"}

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pytest = "^7.0.0"
pytest-xdist = "^3.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
