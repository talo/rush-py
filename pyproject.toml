[tool.poetry]
name = "tengu-py"
version = "1.0.4"
description = "Python SDK for interacting with the QDX Tengu API and modules"
authors = ["Ryan Swart <ryan.swart@qdx.co>", "Sean Laguna <sean.laguna@qdx.co>"]
readme = "README.md"
packages = [{include = "tengu"}]

[tool.poetry.scripts]
# tengu = "tengu.__main__:main"

[tool.poetry.dependencies]
python = "^3.10,<3.13"
pdb-tools = "^2.5.0"
httpx = "^0.25.2"
pydantic = "^2.5.2"
websockets = "^11.0"


[tool.poetry.group.dev.dependencies]
ariadne-codegen = "0.10.0"
black = "23.11.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pytest = "^7.0.0"
pytest-xdist = "^3.0.0"
jupyterlab = "^3.6.1"
nbdev = "^2.3.12"
parso = "^0.8.3"
pdoc= "^14.1.0"
pip = "22.3.1"
quarto = "^0.1.0"
qdx-py = "^0.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool]
[tool.black]
line-length = 110

[tool.isort]
line_length = 110
profile = "black"

[tool.pydocstyle]
ignore = ["D202", "D105"]
match = "(?!test_).*.py"

[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__", "**/*venv*", "result", "setup.py"]
ignore = ["**/node_modules", "**/__pycache__", "**/*venv*", "result", "setup.py"]
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportMissingImports = true
reportMissingTypeStubs = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true

[[tool.pyright.executionEnvironments]]
root = ""

[[tool.pyright.executionEnvironments]]
extraPaths = [""]
root = "tests"

[tool.pytest]
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]

[tool.setuptools]
[tool.setuptools.packages]
[tool.setuptools.packages.find]
exclude = ["test", "tests"]
where = [""]

[tool.ariadne-codegen]
schema_path = "schema.graphql"
queries_path = "combined.graphql"
target_package_path = "./tengu"
plugins = ["ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin"]

[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"

[tool.ariadne-codegen.scalars.UserId]
type = "uuid.UUID"

[tool.ariadne-codegen.scalars.AccountId]
type = "uuid.UUID"


[tool.ariadne-codegen.scalars.ArgumentId]
type = "uuid.UUID"

[tool.ariadne-codegen.scalars.ModuleId]
type = "uuid.UUID"

[tool.ariadne-codegen.scalars.ModuleInstanceId]
type = "uuid.UUID"
