mutation create_binding_affinity($binding_affinity: CreateBindingAffinity!) {
  create_binding_affinity(input: $binding_affinity) {
    id
  }
}
mutation create_binding_pose_affinity(
  $binding_pose_affinity: CreateBindingPoseAffinity!
) {
  create_binding_pose_affinity(input: $binding_pose_affinity) {
    id
  }
}
mutation create_binding_pose_conformer(
  $binding_pose_conformer: CreateBindingPoseConformer!
) {
  create_binding_pose_conformer(input: $binding_pose_conformer) {
    id
    name
    description
    tags
  }
}
mutation create_binding_pose_conformer_interactions(
  $binding_pose_conformer_interactions: CreateBindingPoseConformerInteractions!
) {
  create_binding_pose_conformer_interactions(
    input: $binding_pose_conformer_interactions
  ) {
    id
    name
    description
    tags
  }
}
mutation create_binding_site_conformer(
  $binding_site_conformer: CreateBindingSiteConformer!
) {
  create_binding_site_conformer(input: $binding_site_conformer) {
    id
  }
}
mutation create_binding_site_conformer_prediction(
  $binding_site_conformer_prediction: CreateBindingSiteConformerPrediction!
) {
  create_binding_site_conformer_prediction(
    input: $binding_site_conformer_prediction
  ) {
    id
    #binding_site_conformer
    #protein_conformer
    score
    probability
    #project_id
    name
    description
    tags
  }
}
mutation create_binding_site_interactions(
  $binding_site_interactions: CreateBindingSiteInteractions!
) {
  create_binding_site_interactions(input: $binding_site_interactions) {
    id
    residues
    interactions {
      kind
    }
    name
    description
    tags
  }
}
mutation cancel_module_instance($moduleInstanceId: ModuleInstanceId!) {
  cancel(instance: $moduleInstanceId)
}
mutation create_project($project: CreateProject!) {
  create_project(input: $project) {
    id
    name
    description
  }
}
mutation delete_module_instance($moduleInstanceId: ModuleInstanceId!) {
  delete_module_instance(module: $moduleInstanceId) {
    id
  }
}
mutation deploy($module: CreateModule!) {
  deploy(module: $module) {
    id
    path
  }
}
# Query is standalone because the graphql-client POSTs all queries in the same file for each subquery
# this queries fragments interacted badly with other queries, causing unexplained issues that will be resolved
# by moving to cynic

query module_instances(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $sort: ModuleInstanceSort
  $filter: ModuleInstanceFilter
) {
  me {
    account {
      module_instances(
        first: $first
        last: $last
        after: $after
        before: $before
        sort: $sort
        filter: $filter
      ) {
        edges {
          cursor
          node {
            id
            account_id

            created_at
            deleted_at
            queued_at
            admitted_at
            dispatched_at
            completed_at

            path
            status
            target
            tags

            ins {
              id
              created_at
              deleted_at
              rejected_at
              account_id
              typeinfo
              value
              tags
              source
            }
            outs {
              id
              created_at
              deleted_at
              rejected_at
              account_id
              typeinfo
              value
              tags
              source
            }
            resources {
              gpus
              nodes
              mem
              storage
              walltime
            }
            progress {
              n
              n_expected
              n_max
              done
            }
          }
        }
        pageInfo {
          hasPreviousPage
          hasNextPage
          startCursor
          endCursor
        }
      }
    }
  }
}
mutation create_multiple_sequence_alignment(
  $input: CreateMultipleSequenceAlignment!
) {
  create_msa(input: $input) {
    id
    name
    description
    tags
  }
}
mutation create_protein_conformer($protein_conformer: CreateProteinConformer!) {
  create_protein_conformer(input: $protein_conformer) {
    id
    residues
    name
    description
    tags
  }
}
mutation create_protein($protein: CreateProtein!) {
  create_protein(input: $protein) {
    id
  }
}
# Common Fragments across all queries
fragment PageInfoFull on PageInfo {
  hasPreviousPage
  hasNextPage
  startCursor
  endCursor
}

## Arguments fragments and queries
fragment ArgumentFull on Argument {
  id
  name
  typeinfo
  value
  created_at
  rejected_at
  source
  tags
}

query argument($id: ArgumentId!) {
  argument(id: $id) {
    ...ArgumentFull
  }
}

query arguments(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $filter: ArgumentFilter
) {
  me {
    account {
      arguments(
        first: $first
        last: $last
        after: $after
        before: $before
        filter: $filter
      ) {
        pageInfo {
          ...PageInfoFull
        }
        edges {
          cursor
          node {
            ...ArgumentFull
          }
        }
      }
    }
  }
}

## Module fragments and queries

fragment ModuleFull on Module {
  id
  name
  created_at
  deleted_at
  path
  ins
  ins_usage
  outs
  outs_usage
  description
  typedesc
  tags
  targets
  resource_bounds {
    gpu_min
    gpu_max
    gpu_hint

    gpu_mem_min
    gpu_mem_max
    gpu_mem_hint

    cpu_min
    cpu_max
    cpu_hint
    node_min
    node_max
    node_hint

    mem_min
    mem_max

    storage_min
    storage_max
  }
}

query latest_modules(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $names: [String!]
) {
  latest_modules(
    after: $after
    before: $before
    first: $first
    last: $last
    names: $names
  ) {
    pageInfo {
      ...PageInfoFull
    }
    edges {
      cursor
      node {
        ...ModuleFull
      }
    }
  }
}

query modules(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $filter: ModuleFilter
) {
  modules(
    first: $first
    last: $last
    after: $after
    before: $before
    filter: $filter
  ) {
    pageInfo {
      ...PageInfoFull
    }
    edges {
      cursor
      node {
        ...ModuleFull
      }
    }
  }
}

## ModuleInstance fragments and queries

fragment ModuleInstanceCommon on ModuleInstance {
  id
  account_id
  name

  created_at
  deleted_at
  queued_at
  admitted_at
  dispatched_at
  completed_at

  path
  status
  target
  tags

  failure_reason
  failure_context {
    stdout
    stderr
    syserr
  }
}

fragment ModuleInstanceFull on ModuleInstance {
  ...ModuleInstanceCommon
  ins {
    id
    created_at
    deleted_at
    rejected_at
    account_id
    typeinfo
    value
    tags
    source
  }
  outs {
    id
    created_at
    deleted_at
    rejected_at
    account_id
    typeinfo
    value
    tags
    source
  }
  resources {
    gpus
    nodes
    mem
    storage
    walltime
  }
  progress {
    n
    n_expected
    n_max
    done
  }
  resource_utilization {
    gpu
    mem
    storage
    walltime
    cputime
    inodes
    sus
  }
}

query module_instance_details(
  $id: ModuleInstanceId!
  $stderr_after: String
  $stderr_before: String
  $stdout_after: String
  $stdout_before: String
) {
  module_instance(id: $id) {
    ...ModuleInstanceFull
    stdout(after: $stdout_after, before: $stdout_before) {
      pageInfo {
        ...PageInfoFull
      }
      edges {
        cursor
        node {
          id
          created_at
          content
        }
      }
    }
    stderr(after: $stderr_after, before: $stderr_before) {
      pageInfo {
        ...PageInfoFull
      }
      edges {
        cursor
        node {
          id
          created_at
          content
        }
      }
    }
  }
}

query module_instance_minimal($id: ModuleInstanceId!) {
  module_instance(id: $id) {
    ...ModuleInstanceCommon
  }
}

query object_url($path: UUID!) {
  object_path(path: $path) {
    url
  }
}

query object_contents($path: UUID!) {
  object_path(path: $path) {
    contents
  }
}

query smol_libraries(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $sort: SmolLibrarySort
) {
  smol_libraries(
    after: $after
    before: $before
    first: $first
    last: $last
    sort: $sort
  ) {
    pageInfo {
      ...PageInfoFull
    }
    edges {
      cursor
      node {
        id
        name
        description
        created_at
        updated_at
        deleted_at
        tags
      }
    }
    total_count
  }
}
query project($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        id
        created_at
        updated_at
        deleted_at
        name
        description
        run_id
        tags
      }
    }
  }
}

query projects {
  me {
    account {
      projects {
        pageInfo {
          ...PageInfoFull
        }
        edges {
          cursor
          node {
            id
            created_at
            updated_at
            deleted_at
            name
            description
            run_id
            tags
          }
        }
        total_count
      }
    }
  }
}

query run($project_id: ProjectId!, $run_id: RunId!) {
  me {
    account {
      project(id: $project_id) {
        run(id: $run_id) {
          id
          rex
          result
          trace
          module_lock
          status
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query runs($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        runs {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              rex
              result
              trace
              module_lock
              status
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query protein($project_id: ProjectId!, $protein_id: ProteinId!) {
  me {
    account {
      project(id: $project_id) {
        protein(id: $protein_id) {
          id
          sequence
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query proteins($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        proteins {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              sequence
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query smol($project_id: ProjectId!, $smol_id: SmolId!) {
  me {
    account {
      project(id: $project_id) {
        smol(id: $smol_id) {
          id
          smi
          inchi
          data_blocks
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query smols($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        smols {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              smi
              inchi
              data_blocks
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query msa($project_id: ProjectId!, $msa_id: MultipleSequenceAlignmentId!) {
  me {
    account {
      project(id: $project_id) {
        msa(id: $msa_id) {
          id
          a_3m
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query msas($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        msas {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              a_3m
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query structure($project_id: ProjectId!, $structure_id: StructureId!) {
  me {
    account {
      project(id: $project_id) {
        structure(id: $structure_id) {
          id
          rcsb_id
          topology
          residues
          chains
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query structures($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        structures {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              rcsb_id
              topology
              residues
              chains
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query protein_conformer(
  $project_id: ProjectId!
  $conformer_id: ProteinConformerId!
) {
  me {
    account {
      project(id: $project_id) {
        protein_conformer(id: $conformer_id) {
          id
          residues
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          structure {
            id
            rcsb_id
          }
          protein {
            id
            sequence
          }
        }
      }
    }
  }
}

query protein_conformers($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        protein_conformers {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              residues
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              structure {
                id
                rcsb_id
              }
              protein {
                id
                sequence
              }
            }
          }
          total_count
        }
      }
    }
  }
}

query smol_conformer($project_id: ProjectId!, $conformer_id: SmolConformerId!) {
  me {
    account {
      project(id: $project_id) {
        smol_conformer(id: $conformer_id) {
          id
          residues
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          structure {
            id
            rcsb_id
          }
          smol {
            id
            smi
          }
        }
      }
    }
  }
}

query smol_conformers($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        smol_conformers {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              residues
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              structure {
                id
                rcsb_id
              }
              smol {
                id
                smi
              }
            }
          }
          total_count
        }
      }
    }
  }
}

query binding_site_interaction(
  $project_id: ProjectId!
  $bsi_id: BindingSiteInteractionsId!
) {
  me {
    account {
      project(id: $project_id) {
        binding_site_interaction(id: $bsi_id) {
          id
          residues
          interactions {
            kind
            pi_stack_kind
            ligand_atom
            receptor_atom
          }
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
        }
      }
    }
  }
}

query binding_site_interactions($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        binding_site_interactions {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              residues
              interactions {
                kind
                pi_stack_kind
                ligand_atom
                receptor_atom
              }
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
            }
          }
          total_count
        }
      }
    }
  }
}

query binding_site_conformer(
  $project_id: ProjectId!
  $bsc_id: BindingSiteConformerId!
) {
  me {
    account {
      project(id: $project_id) {
        binding_site_conformer(id: $bsc_id) {
          id
          bounding_box {
            min
            max
          }
          surface_atoms
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          protein_conformer {
            id
            residues
          }
        }
      }
    }
  }
}

query binding_site_conformers($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        binding_site_conformers {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              bounding_box {
                min
                max
              }
              surface_atoms
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              protein_conformer {
                id
                residues
              }
            }
          }
          total_count
        }
      }
    }
  }
}

query binding_pose_conformer(
  $project_id: ProjectId!
  $bpc_id: BindingPoseConformerId!
) {
  me {
    account {
      project(id: $project_id) {
        binding_pose_conformer(id: $bpc_id) {
          id
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          smol_conformer {
            id
            residues
          }
          binding_site_conformer {
            id
            bounding_box {
              min
              max
            }
          }
        }
      }
    }
  }
}

query binding_pose_conformers($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        binding_pose_conformers {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              smol_conformer {
                id
                residues
              }
              binding_site_conformer {
                id
                bounding_box {
                  min
                  max
                }
              }
            }
          }
          total_count
        }
      }
    }
  }
}

query binding_affinity($project_id: ProjectId!, $ba_id: BindingAffinityId!) {
  me {
    account {
      project(id: $project_id) {
        binding_affinity(id: $ba_id) {
          id
          affinity
          affinity_metric
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          protein {
            id
            sequence
          }
          smol {
            id
            smi
          }
        }
      }
    }
  }
}

query binding_affinities($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        binding_affinities {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              affinity
              affinity_metric
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              protein {
                id
                sequence
              }
              smol {
                id
                smi
              }
            }
          }
          total_count
        }
      }
    }
  }
}

query binding_pose_conformer_interaction(
  $project_id: ProjectId!
  $bpci_id: BindingPoseConformerInteractionsId!
) {
  me {
    account {
      project(id: $project_id) {
        binding_pose_conformer_interaction(id: $bpci_id) {
          id
          created_at
          updated_at
          deleted_at
          name
          description
          run_id
          tags
          binding_pose_conformer {
            id
          }
          binding_site_interactions {
            id
            residues
            interactions {
              kind
              pi_stack_kind
              ligand_atom
              receptor_atom
            }
          }
        }
      }
    }
  }
}

query binding_pose_conformer_interactions($project_id: ProjectId!) {
  me {
    account {
      project(id: $project_id) {
        binding_pose_conformer_interactions {
          pageInfo {
            ...PageInfoFull
          }
          edges {
            cursor
            node {
              id
              created_at
              updated_at
              deleted_at
              name
              description
              run_id
              tags
              binding_pose_conformer {
                id
              }
              binding_site_interactions {
                id
                residues
                interactions {
                  kind
                  pi_stack_kind
                  ligand_atom
                  receptor_atom
                }
              }
            }
          }
          total_count
        }
      }
    }
  }
}
# Retries a failed module instance
mutation retry(
  $instance: ModuleInstanceId!
  $target: ModuleInstanceTarget!
  $resources: ResourcesInput
) {
  retry(instance: $instance, target: $target, resources: $resources) {
    id
  }
}
mutation run_module($instance: CreateModuleInstance!) {
  run(instance: $instance) {
    id
    outs {
      id
    }
  }
}
mutation create_smol_conformer($smol_conformer: CreateSmolConformer!) {
  create_smol_conformer(input: $smol_conformer) {
    id
    residues
    name
    description
    tags
  }
}
mutation create_smol($smol: CreateSmol!) {
  create_smol(input: $smol) {
    id
  }
}
mutation create_smol_library($smol_library: CreateSmolLibrary!) {
  create_smol_library(input: $smol_library) {
    id
  }
}

mutation create_smol_library_partition(
  $smol_library_partition: CreateSmolLibraryPartition!
) {
  create_smol_library_partition(input: $smol_library_partition) {
    id
  }
}
mutation create_structure($structure: CreateStructure!) {
  create_structure(input: $structure) {
    id
  }
}
mutation create_tag($tag: CreateTag!) {
  create_tag(input: $tag) {
    id
    key
    value
    tagged_id
    tagged_type
    name
    description
    tags
  }
}

mutation tag(
  $moduleInstanceId: ModuleInstanceId
  $argumentId: ArgumentId
  $moduleId: ModuleId
  $tags: [String!]!
) {
  tag(
    module_instance: $moduleInstanceId
    argument: $argumentId
    module: $moduleId
    tags: $tags
  )
}
mutation track_utilization($utilization: CreateResourceUtilization!) {
  track_module_instance_resource_utilization(utilization: $utilization) {
    id
  }
}
mutation untag(
  $moduleInstanceId: ModuleInstanceId
  $argumentId: ArgumentId
  $moduleId: ModuleId
  $tags: [String!]!
) {
  untag(
    module_instance: $moduleInstanceId
    argument: $argumentId
    module: $moduleId
    tags: $tags
  )
}
mutation update_account_config(
  $account_id: AccountId!
  $input: AccountConfigInput!
) {
  update_account_config(account_id: $account_id, input: $input) {
    config_account
    bucket_config {
      data_bucket
      log_bucket
      bucket_region
    }
  }
}
mutation update_account_tier($account_id: AccountId!, $tier: AccountTier!) {
  update_account_tier(account_id: $account_id, tier: $tier)
}
mutation update_module_instance(
  $id: ModuleInstanceId!
  $moduleInstanceUpdate: PatchModuleInstanceInput!
  $arguments: [ArgumentInput!]
) {
  update_module_instance(
    arguments_update: $arguments
    instance_id: $id
    instance_update: $moduleInstanceUpdate
  ) {
    id
    status
  }
}
mutation upload_large_object(
  $typeinfo: JSON!
  $format: ObjectFormat!
  $public: Boolean
) {
  upload_large_object(typeinfo: $typeinfo, format: $format, public: $public) {
    upload_url
    descriptor {
      id
      name
      description
      type_info
      object {
        format
        size
        path
      }
      tags
    }
  }
}
